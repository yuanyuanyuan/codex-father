# MCP Protocol Contract
# 定义标准 MCP 协议接口的契约

openapi: 3.1.0
info:
  title: Codex Father MCP Protocol
  version: 1.0.0
  description: |
    Model Context Protocol (MCP) 标准接口契约。
    传输方式：stdio (JSON-RPC 2.0 over line-delimited JSON)

# MCP 使用 JSON-RPC 2.0，不是 REST，但这里用 OpenAPI 描述消息格式
paths:
  /initialize:
    post:
      summary: 初始化 MCP 连接
      description: |
        客户端发起的第一个请求，协商协议版本和能力。
        JSON-RPC 方法名：initialize
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                id:
                  type: [string, number]
                method:
                  type: string
                  enum: ['initialize']
                params:
                  type: object
                  properties:
                    protocolVersion:
                      type: string
                      example: '2024-11-05'
                    capabilities:
                      type: object
                      properties:
                        roots:
                          type: object
                          properties:
                            listChanged:
                              type: boolean
                        sampling:
                          type: object
                      additionalProperties: true
                    clientInfo:
                      type: object
                      properties:
                        name:
                          type: string
                        version:
                          type: string
              required: [jsonrpc, id, method, params]
      responses:
        '200':
          description: 初始化成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ['2.0']
                  id:
                    type: [string, number]
                  result:
                    type: object
                    properties:
                      protocolVersion:
                        type: string
                      capabilities:
                        type: object
                        properties:
                          tools:
                            type: object
                            properties:
                              listChanged:
                                type: boolean
                          notifications:
                            type: object
                        additionalProperties: true
                      serverInfo:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'codex-father'
                          version:
                            type: string
                            example: '1.0.0'
                required: [jsonrpc, id, result]

  /tools/list:
    post:
      summary: 列出可用工具
      description: |
        查询服务器支持的所有工具。
        JSON-RPC 方法名：tools/list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                id:
                  type: [string, number]
                method:
                  type: string
                  enum: ['tools/list']
                params:
                  type: object
                  nullable: true
              required: [jsonrpc, id, method]
      responses:
        '200':
          description: 工具列表响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ['2.0']
                  id:
                    type: [string, number]
                  result:
                    type: object
                    properties:
                      tools:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'start-codex-task'
                            description:
                              type: string
                              example: 'Start a new Codex task with specified prompt'
                            inputSchema:
                              type: object
                              example:
                                type: object
                                properties:
                                  prompt:
                                    type: string
                                  model:
                                    type: string
                                required: [prompt]
                          required: [name, description, inputSchema]
                required: [jsonrpc, id, result]

  /tools/call:
    post:
      summary: 调用工具
      description: |
        执行指定的工具。
        JSON-RPC 方法名：tools/call

        重要：此调用必须在 500ms 内快速返回，不等待任务执行完成。
        实际执行进度通过 MCP notifications (codex-father/progress) 推送。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                id:
                  type: [string, number]
                method:
                  type: string
                  enum: ['tools/call']
                params:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 'start-codex-task'
                    arguments:
                      type: object
                      example:
                        prompt: 'Fix the login bug'
                        model: 'gpt-5'
                        approvalPolicy: 'on-request'
                  required: [name, arguments]
              required: [jsonrpc, id, method, params]
      responses:
        '200':
          description: 工具调用快速响应（< 500ms）
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ['2.0']
                  id:
                    type: [string, number]
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                        enum: ['accepted', 'rejected']
                        example: 'accepted'
                      jobId:
                        type: string
                        format: uuid
                        description: '唯一作业 ID，用于关联后续通知'
                      conversationId:
                        type: string
                        format: uuid
                        description: 'Codex 会话 ID'
                      message:
                        type: string
                        example: 'Task queued, progress will be sent via notifications'
                    required: [status, jobId, message]
                required: [jsonrpc, id, result]

  /notifications/cancelled:
    post:
      summary: 取消通知（客户端 → 服务端）
      description: |
        客户端发送的通知，请求取消某个正在执行的请求。
        JSON-RPC 通知（无 id 字段）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                method:
                  type: string
                  enum: ['notifications/cancelled']
                params:
                  type: object
                  properties:
                    requestId:
                      type: [string, number]
                      description: '要取消的请求 ID（对应原 tools/call 的 id）'
                    reason:
                      type: string
                      example: 'User requested cancellation'
                  required: [requestId]
              required: [jsonrpc, method, params]
      responses:
        '204':
          description: 通知不需要响应

  /codex-father/progress:
    post:
      summary: 任务进度通知（服务端 → 客户端）
      description: |
        服务端发送的通知，推送任务执行进度。
        JSON-RPC 通知（无 id 字段）

        此通知用于替代 tools/call 的阻塞等待，实现异步响应机制。
        客户端使用 jobId 关联原请求。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                method:
                  type: string
                  enum: ['codex-father/progress']
                params:
                  type: object
                  properties:
                    jobId:
                      type: string
                      format: uuid
                      description: '关联的作业 ID（来自 tools/call 响应）'
                    eventType:
                      type: string
                      enum:
                        - task-started
                        - agent-message
                        - task-complete
                        - task-error
                        - approval-required
                      description: '事件类型（映射自 Codex 事件）'
                    eventData:
                      type: object
                      description: '事件具体数据（依赖于 eventType）'
                      additionalProperties: true
                    timestamp:
                      type: string
                      format: date-time
                  required: [jobId, eventType, eventData, timestamp]
              required: [jsonrpc, method, params]
      responses:
        '204':
          description: 通知不需要响应

components:
  schemas:
    JSONRPCError:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ['2.0']
        id:
          type: [string, number, 'null']
        error:
          type: object
          properties:
            code:
              type: integer
              example: -32600
            message:
              type: string
              example: 'Invalid Request'
            data:
              type: object
              additionalProperties: true
          required: [code, message]
      required: [jsonrpc, id, error]

    ProgressEventData:
      oneOf:
        - type: object
          description: 'task-started event'
          properties:
            taskId:
              type: string
            startTime:
              type: string
              format: date-time
        - type: object
          description: 'agent-message event'
          properties:
            message:
              type: string
            role:
              type: string
              enum: [user, assistant, system]
        - type: object
          description: 'task-complete event'
          properties:
            result:
              type: string
            duration:
              type: number
        - type: object
          description: 'task-error event'
          properties:
            error:
              type: string
            code:
              type: string
        - type: object
          description: 'approval-required event'
          properties:
            approvalId:
              type: string
            type:
              type: string
              enum: [exec-command, apply-patch]
            details:
              type: object