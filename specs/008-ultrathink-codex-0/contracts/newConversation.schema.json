{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "newConversation",
  "description": "Start a new Codex conversation session with optional configuration overrides",
  "dataSource": "refer-research/openai-codex/codex-rs/docs/codex_mcp_interface.md:52-63",
  "minVersion": "0.42.0",
  "request": {
    "type": "object",
    "properties": {
      "model": {
        "type": "string",
        "description": "Model ID to use (e.g. 'o3', 'gpt-5', 'gpt-5-codex')",
        "examples": ["gpt-5", "gpt-5-codex", "o3"]
      },
      "profile": {
        "type": "string",
        "description": "Named profile to load (Codex 0.44+ only)",
        "minVersion": "0.44.0"
      },
      "cwd": {
        "type": "string",
        "description": "Working directory for the conversation"
      },
      "approvalPolicy": {
        "type": "string",
        "enum": ["untrusted", "on-request", "on-failure", "never"],
        "description": "Approval policy for tool execution"
      },
      "sandbox": {
        "type": "string",
        "enum": ["read-only", "workspace-write", "danger-full-access"],
        "description": "Sandbox mode for file system access"
      },
      "config": {
        "type": "object",
        "description": "Additional config overrides (key-value pairs)",
        "additionalProperties": true
      },
      "baseInstructions": {
        "type": "string",
        "description": "Optional instruction override"
      },
      "includePlanTool": {
        "type": "boolean",
        "description": "Whether to include the plan tool"
      },
      "includeApplyPatchTool": {
        "type": "boolean",
        "description": "Whether to include the apply patch tool"
      }
    },
    "required": [],
    "additionalProperties": false
  },
  "response": {
    "type": "object",
    "properties": {
      "conversationId": {
        "type": "string",
        "description": "Unique ID for the created conversation"
      },
      "model": {
        "type": "string",
        "description": "Actual model being used (may differ from request if overridden)"
      },
      "reasoningEffort": {
        "type": "string",
        "enum": ["low", "medium", "high"],
        "description": "Reasoning effort level (Codex 0.44+ only, for reasoning models)",
        "minVersion": "0.44.0"
      },
      "rolloutPath": {
        "type": "string",
        "description": "Path to the rollout JSONL file"
      }
    },
    "required": ["conversationId", "model", "rolloutPath"],
    "additionalProperties": false
  },
  "versionSpecificParams": {
    "profile": {
      "minVersion": "0.44.0",
      "incompatibleBehavior": "Returns JSON-RPC error: Invalid params: 'profile' requires Codex >= 0.44 (current: {version})"
    }
  },
  "versionSpecificResponse": {
    "reasoningEffort": {
      "minVersion": "0.44.0",
      "note": "Only returned for reasoning models in Codex 0.44+"
    }
  }
}
